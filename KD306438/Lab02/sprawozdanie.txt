1.1 Wygenerowano nowy klucz SSH realizując następujące kroki:
	-w konsoli wykonano instrukcję 'ssh-keygen -t ed25519 -C "dyrda.karina@gmail.com"', która spowodowała utworzenie nowego klucza SSH z aderesem email stanowiącym etykietę.
	Następnie po wyświetleniu komunikatu zaakceptowano domyślną lokalizację pliku wciskając Enter. 
1.2 W dlaszym kroku wprowadzono bezpieczne hasło do klucza SSH - tzw. passphrase.
1.3 Dodano agenta SSH do obsługi klucza SSH:
	-uruchomiono agenta ssh w tle za pomocą komendy 'eval `ssh-agent -s`
	-dodaano swój klucz prywatny SSH do agenta, wykorzystując w poleceniu nazwę utworzonego klucza: 'ssh-add ~ / .ssh / id_ed25519'.
1.4 Zarejestrowania klucza po stronie serwera:
	-dodanie nowego klucza SSH do konta GitHub poprzez skopiowanie do schowka wygenerowany klucz publiczny SSH, poprzez zastosowanie polecenia 'clip < ~/.ssh/id_ed25519.pub'
	-przejście na koncie GitHub w Ustawienia -> SSH and GPG keys, a tam dodanie nowego klucza SSH nadając mu odpowiednią etykietę oraz wklejając we wskazane pole uprzednio skopiowany klucz.
1.5 Zasyganlizowanie Git'owi zmiany sposobu logowania:
	-sprawdzenie w konsoli obecnego rodzaju połączenia - komenda 'git remote -v', której wynik wskazał na połącznie po https.
	-zmiana połącznie na SSH poleceniem 'git remote set-url origin git@github.com:InzynieriaOprogramowaniaAGH/MIFT2021.git'
	-sprawdzenie poprawności zmiany połączenia - 'git remote -v'. Wyświetlone zostało połącznie po ssh - protokół git@.