Temat:
Klucze SSH i połączenie SSH. Łączenie i usuwanie zmian w kodzie. Manipulowanie organizacją repozytorium GIT.

Uwaga: korzystamy z tego samego repo co w zeszłym tygodniu, czyli git@github.com:InzynieriaOprogramowaniaAGH/MIFT2021.git
Uwaga: po wykonaniu każdego numerowanego polecenia, wykonaj zrzut ekranu z efektem twojej pracy - będzie to potrzebne później.
Uwaga: w czasie wykonanywania zadania pisz plik "sprawozdanie.txt", zawierający treść instrukcji którymi się posłużyłeś do wykonania zadania.
Uwaga: Zwróć uwagę by w komentarzu do commita zawrzeć czytelną informację w ramach którego ćwiczenia laboratoryjnego i którego zdania to robisz.
Uwaga: Upewnij się że jesteś na swoim branchu stworzonym na poprzednich zajęciach. (Jeżeli go usnąłeś, to stwórz go jeszcze raz i przełącz się na niego).
Uwaga: Na mastera wrzucamy zmiany tylko przez pull requesta! https://github.com/InzynieriaOprogramowaniaAGH/MIFT2021/pulls

1. Klucz SSH i połączenie SSH zamiast HTTPS.
Zmień sposób logowania do repozytorium z HTTPS na bezpieczniejszy przy użyciu klucza SSH. Będziesz potrzebować:
1.1 Klucza SSH. 
Jeżeli już masz - to wystarczy go znaleźć. Jeżeli nie masz lub nie możesz znaleźć, trzeba wygenerować nowy. https://docs.github.com/en/github-ae@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key
Uwaga: nigdy nie udostępniaj klucza publicznie!
1.2 Hasła do klucza SSH (passphrase). 
Jeżeli generujesz nowy klucz w pkt 1.1 to właśnie przed chwilą je podałeś.
Uwaga: nigdy nie udostępniaj hasła do klucza publicznie!
1.3 Działającego agenta SSH do obsługi klucza SSH.
https://docs.github.com/en/github-ae@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent
1.4 Zarejestrowania klucza po stronie serwera.
https://docs.github.com/en/github-ae@latest/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account
1.5 Trzeba poinformować Git'a o zmianie sposobu logowania.
1.5.1 "git remote -v" powinien wyświetlić połącznie po https.
1.5.2."git remote set-url origin git@github.com:InzynieriaOprogramowaniaAGH/MIFT2021.git" zmienia połącznie na SSH.
1.5.3 "git remote -v" powinien wyświetlić połącznie po ssh (protokół git@).


2. Nadaj "Tag" na aktualnego commita o nazwie: "twoje inicjały + nr indexu + nr zadania" wraz z komentarzem.
Np.: git tag -a KM123456_Lab01 -m "Kazimierz Michalik, Lab 01 wszystko działa, 10/10 proszę"
2.1 Wrzuć tą zmianę na swojego brancha na origin, a następnie remote/origin używając np.: git push --follow-tags

3. Uporządkowanie branch'y i folderów: pogrupowanie w grupy laboroatoryjne.
Aktualnie pracujemy w konfiguracji, która prezentuje się następująco:
"repo/inicjały+indeks/Lab##", np.: "MIFT2021/KM123456/Lab01".
Dotychczas ta konfiguracja była bardzo podobna dla folderów i dla branchy, lecz teraz to zmienimy.

3.1 Chcemy teraz stworzyć konfigurację folderów (!), która będzie wyglądała tak:
"repo/Grupy/Grupa##/inicjały+indeks/Lab##", np.: "MIFT2021/Grupy/Grupa08/KM123456/Lab02".
Przenieś w repozytorium swój folder (np.:KM123456), tak by był dostępny pod nową ścieżką i nie był dostępny pod starą ścieżką.

3.2 Chcemy teraz stworzyć konfigurację branchy (!), która będzie wyglądała tak (pamiętaj podminieć swoje inicjały+nr idndeksu w miejsce "KM123456" i stworzyć folder dla właściwej sobie grupy laboratoryjnej!):
* master (już istnieje; branch długożyjący; tutaj już nie robimy więcej push'a; dołączamy tylko "branche grupowe" przez pull requesta)
* Grupa01 (już istnieje; branch długożyjący; to jest branch grupowy; do tego brancha będziesz push'ował zmiany ze swojego brancha)
* Grupa01-KM123456_Lab02 (takiego brancha musisz zrobić oddzielając go od swojego grupowego brancha; to jest branch krótko żyjący; usuniesz go kiedy wykonasz swoje ćwiczenie i zrobisz merga do brancha grupowego; takiego brancha będziesz tworzył dla każdego laboratorium osobno)


4. Napisz Git hook'a - skrypt weryfikujący, że każdy Twój commit message zaczyna się od "twoje inicjały + nr indexu". 
4.1 Wepnij go we właściwe miejsce, tak by uruchamiał się za każdym razem kiedy robisz commita.
(zwróć uwagę że ten git hook musi się uruchamiać po twojej stronie, nie serwera).
Przykładowe githook'i są w .git/hooks.
Koniecznie umieść treść githooka w sprawozdaniu.

5. Dołącz swoje zmiany. 
5.1 Zrób merga ze swojego brancha osobistego do brancha grupowego. Następnie zamknij branch osobisty.
5.2 Stwórz nowy "Pull request" ze swojego brancha grupowego do mastera: https://github.com/InzynieriaOprogramowaniaAGH/MIFT2021/pulls

Uwaga: zgłoś zadanie na MS Teams!