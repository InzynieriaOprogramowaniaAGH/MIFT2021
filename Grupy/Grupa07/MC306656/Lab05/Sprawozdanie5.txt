Na poczatku należało zapoznać się z oprogramowaniem Jenkins.
Następnie należało stworzyć kontener dockerowy z Jenkinsem posługując się instrukcją krok po kroku dla Linux przedstawionej na stronie https://www.jenkins.io/doc/book/installing/docker/. W krokach tych był również przedstawiony dockerfile wraz z komendami, które wywołują się poprzez uruchomienie go:
1) sudo docker network create jenkins
2) sudo ddocker run \
  --name jenkins-docker \
  --rm \
  --detach \
  --privileged \
  --network jenkins \
  --network-alias docker \
  --env DOCKER_TLS_CERTDIR=/certs \
  --volume jenkins-docker-certs:/certs/client \
  --volume jenkins-data:/var/jenkins_home \
  --publish 2376:2376 \
  docker:dind \
  --storage-driver overlay2
3) tworzony dockerfile:
FROM jenkins/jenkins:2.277.2-lts-jdk11
USER root
RUN apt-get update && apt-get install -y apt-transport-https \
       ca-certificates curl gnupg2 \
       software-properties-common
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository \
       "deb [arch=amd64] https://download.docker.com/linux/debian \
       $(lsb_release -cs) stable"
RUN apt-get update && apt-get install -y docker-ce-cli
USER jenkins
RUN jenkins-plugin-cli --plugins "blueocean:1.24.6 docker-workflow:1.26"
4) sudo docker build -t myjenkins-blueocean:1.1 .
5) sudo docker run \
  --name jenkins-blueocean \
  --rm \
  --detach \
  --network jenkins \
  --env DOCKER_HOST=tcp://docker:2376 \
  --env DOCKER_CERT_PATH=/certs/client \
  --env DOCKER_TLS_VERIFY=1 \
  --publish 8080:8080 \
  --publish 50000:50000 \
  --volume jenkins-data:/var/jenkins_home \
  --volume jenkins-docker-certs:/certs/client:ro \
  myjenkins-blueocean:1.1 
Kolejnym krokiem było wrzucenie obrazu swojego Jenkinsa na DockerHub'a, analogicznie jak poprzednie obrazy użyłam komendy docker push malw4/image-docker:tagname. W tym celu użyłam tagu latest.
Na koniec należało z poziomu Jenkinsa uruchomionego w kontenerze uruchomić docker-compose stworzony w ramach Lab04. W tym celu należało wykonać poniższe komendy:
1) sudo curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
2) chmod +x /usr/local/bin/docker-compose
3) sudo docker --version
4) sudo docker-compose --version
5) sudo docker-compose up

