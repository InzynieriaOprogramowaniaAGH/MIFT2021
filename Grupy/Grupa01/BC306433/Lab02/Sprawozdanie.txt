Bartek Ciesiński Lab_02


1.1 Sprawdziłem czy posiadam jakiś klcucz SSH. 
1.2 Ponieważ nie posiadałem żadnego to wygenerowałem nowy klucz SSH.
1.3 Dodałem wygenerowany klucz do agenta SSH za pomocą poleceia: $ eval `ssh-agent -s`
1.4 Następnie zarejestrowałem klucz po stronie servera.
1.5 Poinformowałem gita o zmianie sposobu logowania.
Ponieważ za pierwszym razem storzyłem klucz w nieodpowiednim miejscu, usunałem ten klucz i wygenerowałem nowy.
Dlatego na zdjęciu lab02_zad1_5.png w początkowym sposobie łączenia widać juz łączenie po SSh.

2. Stworzyłem tak z nazwą identyczą co mój branch i taka nazwa taga niosła za sobą pewne konsekwencj.
W momencie kiedy chiałem wysłać swojego commita na swojego brancha git zwracał błąd że nazwa brancha jest identyczna jak nazwa taga, dlatgo moje polecenie jest niejednoznaczne.
Dlatego usunąłem swój tag poleceniem git tag -d "nazwa_tagu" i sworzyłem nowy tag z prawidłową nazwą.
2.1 Po wcześniejszych problemach wrzuciłem zmiany na swojego brancha na origin, oraz na remote/origin używajac polecenia git push --follow-tags.
Zrzuty ekranu zostały wykonane do kadego pojedyńczego zadania, jesli było potrzebne to jedno zadanie posiada więcej niż jeden zrzut ekranu.

3. Uporządkowałem stworzone wcześniej foldery tak, aby możliwe było pogrupowanie w grupy laboratoryjne.
Stworzyłem nowego brancha: git checkout -b Grupa01-BC306433_Lab02

4. Stworzyłem git hook'a o nazwie commit-msg weryfikującego czy commit zaczyna się od inicjałów oraz numeru indeksu i umieściłem go w folderze .git/hooks:
#!/bin/bash
msg="$1"
if ! grep -qE "JS306506" "$msg";then
cat "$msg"
echo "twoj commit musi zaczynac sie od twoich inicjalow i numeru indeksu"
exit 1
fi

5. Dodałem wszystkie zmiany i wykonałem push'a: git push origin Grupa01-BC306433_Lab02, następnie zmieniłem branch'a na Grupa01 i zrobiłem merga:
git merge Grupa01-BC306433_Lab02. Usunąłem osobisty branch: git branch -d Grupa06-JS306506_Lab02	
Następnie stworzyłem nowego pull requesta poprzez link znajdujący się w instrukcji.
