1. Kontener dockerowy ze zbudowanym komunikatorem został utworzony na wcześniejszych zajeciach 'sudo docker build -t karen2035/node-chat:v8 .' Obraz zostal spushowany na pltaforme DockerHub 'sudo docker push karen2035/node-chat:v8'.

2. Nastepnie zainstaloane klaster Kubernetes zgodnie z instrukcja:
	-curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
	-sudo install minikube-linux-amd64 /usr/local/bin/minikube
Po instalacji odpowiednich sternownikow uruchomiono klaster za pomoca 'minikube start' oraz pobrano kubectl 'minikube kubectl -- grt po -A.

3. Uruchomiono Minikube Dashboard komenda 'minikube dashboard'.
Minikube Dashboard to webowy interfejs użytkownika, która pozwala przede wszystkim na wdrazanie skonteneryzowanych aplikacji do klastra Kubernetes, ich przegladanie i rozwiazywanie problemow z nimi zwiazanymi. Ponadto mozemy go wykorzystac do zarzadzania, tworzenia i modyfokwania zasobow klastra Kubernetes.
4. Uruchomiono kontener-komunikator poleceniem 'kubectl run -it komunikator8 --image=karen2035/node-chat:v8 --port=9999 --labels app=komunikator8'. Wczesniej nalezalo w Dockerfile sforkowanego repo aplikacji dopisac 'EXPOSE 3000' oraz 'ENTRYPOINT npm start'.
Po uruchomieniu kontenera przekierowano porty komenda 'kubectl port-forward pod/komunikator8 9999:3000' w celu sprawdzenia dzialania.

5. Po wejsciu na localhost:9999 uruchamia sie aplikacja czatu.
