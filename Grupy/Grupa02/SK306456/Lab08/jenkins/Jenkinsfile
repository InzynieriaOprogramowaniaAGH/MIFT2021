def build_status = 0

pipeline {
    agent any
    environment {
	    DOCKER_DIR = 'Grupy/Grupa02/SK306456/Lab08/docker'
        DOCKER_BUILD = 'chat-build'
        DOCKER_TEST  = 'chat-test'
        DOCKERFILE_BUILD  = 'build-dockerfile' 
        DOCKERFILE_TEST   = 'test-dockerfile'
        
        SRC_PATH='MIFT2021/Grupy/Grupa02/SK306456/Lab08/src'
        REPO_URL='https://github.com/InzynieriaOprogramowaniaAGH/MIFT2021'
        BRANCH='Grupa02-SK306456_Lab08'

    }
    stages {
        stage('Build'){
            steps{
                sh 'docker build -f ${env.DOCKER_DIR}/${env.DOCKERFILE_BUILD} -t ${env.DOCKER_BUILD} --build-arg REPO_URL=${env.REPO_URL} --build-arg SRC_PATH=${env.SRC_PATH} --build-arg BRANCH=${env.BRANCH} .'
                sh 'docker run --name ${env.DOCKER_BUILD} ${env.DOCKER_BUILD}'
                build_status = sh 'docker inspect ${env.DOCKER_BUILD} --format=\'{{.State.ExitCode}\''
            }
        }
        stage('Test'){
            steps {
                echo "${build_status}"
                if(build_status == 0) {
                    sh 'docker build -f ${env.DOCKER_DIR}/${env.DOCKERFILE_TEST} -t ${env.DOCKER_TEST} --build-arg BUILD_IMAGE=${env.DOCKER_BUILD} --build-arg SRC_PATH=${env.SRC_PATH} .'
                    sh 'docker run --name ${env.DOCKER_TEST} ${env.DOCKER_TEST}'
                }
            }
        }
    }
    post {
        failure {
            /*
            mail to: 'skarpecki@student.agh.edu.pl',
                 subject: "Failed chat pipeline: ${currentBuild.fullDisplayName}",
                 body: "Something is wrong with ${env.BUILD_URL}"
            
            */
            echo "Failed"
            }
        success {
            /*
            mail to: 'skarpecki@student.agh.edu.pl',
                 subject: "Succeded chat pipeline: ${currentBuild.fullDisplayName}",
                 body: "Everything is fine with ${env.BUILD_URL}"
            */
            echo "Succeded"
            }   
        always {
            sh 'docker rmi ${DOCKER_TEST}'
            sh 'docker rmi ${DOCKER_BUILD}'
        }
    }
}