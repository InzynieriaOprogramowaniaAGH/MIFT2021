pipeline{
    agent any
    stages {
        stage('Build') {
            steps{
                echo 'Building'
                sh 'git pull origin master'
                checkout scm
                sh 'npm install'
                sh 'npm run build'    
            }
            post{
            failure {
                emailext attachLog: true,
                    body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}",
                    recipientProviders: [developers(), requestor()],
                    to: 'kocurek@gmail.com',
                    subject: "Build failed : Job ${env.JOB_NAME}"
            }
            success {
            emailext attachLog: true,
                body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}",
                recipientProviders: [developers(), requestor()],
                to: 'kocurek@gmail.com',
                subject: "Build successful : Job ${env.JOB_NAME}"
                 }
         }
        }
        
        stage('Test'){
          when {
            expression {currentBuild.result == 'SUCCESS' }
           }

          steps{
            echo 'Testing'
            sh 'npm run test'
            }   
            
            
           post{
              success{
            emailext attachLog: true,
            body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NAME}",
            recipientProviders: [developers(), requestor()],
            subject: "Test Success ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
            to: 'kocurek@gmail.com'        
               }
          failure{
            emailext attachLog: true,
            body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NAME}",
            recipientProviders: [developers(), requestor()],
            subject: "Test failed ${currentBuild.currentResult}: Job ${env.JOB_NAME}",
            to: 'kocurek@gmail.com'        
             }   
          }      
        }
    }
}
